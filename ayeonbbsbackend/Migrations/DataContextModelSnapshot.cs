// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ayeonbbsbackend.ModelDbContext;

namespace ayeonbbsbackend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("ayeonbbsbackend.Models.FirstCategory", b =>
                {
                    b.Property<int>("FirstCategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("FirstCategoryName");

                    b.Property<int>("Status");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("FirstCategoryId");

                    b.ToTable("FirstCategories");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.PostGood", b =>
                {
                    b.Property<int>("GoodsId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateDate");

                    b.Property<int?>("GoodsUserUserId");

                    b.Property<int?>("PostInfoPostId");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("GoodsId");

                    b.HasIndex("GoodsUserUserId");

                    b.HasIndex("PostInfoPostId");

                    b.ToTable("PostGoods");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.PostInfo", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AuthorUserId");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Description");

                    b.Property<int>("IsTop");

                    b.Property<string>("PostContent");

                    b.Property<string>("PostTitle");

                    b.Property<int?>("SecondCategoryId");

                    b.Property<int>("Status");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<int>("Watch");

                    b.HasKey("PostId");

                    b.HasIndex("AuthorUserId");

                    b.HasIndex("SecondCategoryId");

                    b.ToTable("PostInfos");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.PostManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("SecondCategoryId");

                    b.Property<int?>("UserInfoUserId");

                    b.HasKey("Id");

                    b.HasIndex("SecondCategoryId");

                    b.HasIndex("UserInfoUserId");

                    b.ToTable("PostManagers");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.ReplyGood", b =>
                {
                    b.Property<int>("GoodsId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GoodsUserUserId");

                    b.Property<int?>("ReplyInfoReplyId");

                    b.HasKey("GoodsId");

                    b.HasIndex("GoodsUserUserId");

                    b.HasIndex("ReplyInfoReplyId");

                    b.ToTable("ReplyGoods");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.ReplyInfo", b =>
                {
                    b.Property<int>("ReplyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Floor");

                    b.Property<int>("ParentReplyId");

                    b.Property<int?>("PostInfoPostId");

                    b.Property<int?>("RepliedId");

                    b.Property<int?>("RepliedUserId");

                    b.Property<string>("ReplyContent");

                    b.Property<DateTime?>("ReplyDate");

                    b.Property<int?>("ReplyUserUserId");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("ReplyId");

                    b.HasIndex("PostInfoPostId");

                    b.HasIndex("ReplyUserUserId");

                    b.ToTable("ReplyInfos");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.SecondCategory", b =>
                {
                    b.Property<int>("SecondCategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateDate");

                    b.Property<int?>("FirstCategoryId");

                    b.Property<string>("SecondCategoryName");

                    b.Property<int>("Status");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("SecondCategoryId");

                    b.HasIndex("FirstCategoryId");

                    b.ToTable("SecondCategories");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Email");

                    b.Property<int>("IsSupperManager");

                    b.Property<string>("LoginId");

                    b.Property<string>("NickName");

                    b.Property<string>("Password");

                    b.Property<int>("Status");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.UserPublishCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("SecondCategoryId");

                    b.Property<int?>("UserInfoUserId");

                    b.HasKey("Id");

                    b.HasIndex("SecondCategoryId");

                    b.HasIndex("UserInfoUserId");

                    b.ToTable("UserPublishCategories");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.PostGood", b =>
                {
                    b.HasOne("ayeonbbsbackend.Models.UserInfo", "GoodsUser")
                        .WithMany()
                        .HasForeignKey("GoodsUserUserId");

                    b.HasOne("ayeonbbsbackend.Models.PostInfo", "PostInfo")
                        .WithMany("PostGoods")
                        .HasForeignKey("PostInfoPostId");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.PostInfo", b =>
                {
                    b.HasOne("ayeonbbsbackend.Models.UserInfo", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorUserId");

                    b.HasOne("ayeonbbsbackend.Models.SecondCategory", "SecondCategory")
                        .WithMany("PostInfos")
                        .HasForeignKey("SecondCategoryId");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.PostManager", b =>
                {
                    b.HasOne("ayeonbbsbackend.Models.SecondCategory", "SecondCategory")
                        .WithMany()
                        .HasForeignKey("SecondCategoryId");

                    b.HasOne("ayeonbbsbackend.Models.UserInfo", "UserInfo")
                        .WithMany("PostManagers")
                        .HasForeignKey("UserInfoUserId");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.ReplyGood", b =>
                {
                    b.HasOne("ayeonbbsbackend.Models.UserInfo", "GoodsUser")
                        .WithMany()
                        .HasForeignKey("GoodsUserUserId");

                    b.HasOne("ayeonbbsbackend.Models.ReplyInfo", "ReplyInfo")
                        .WithMany("ReplyGoods")
                        .HasForeignKey("ReplyInfoReplyId");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.ReplyInfo", b =>
                {
                    b.HasOne("ayeonbbsbackend.Models.PostInfo", "PostInfo")
                        .WithMany("ReplyInfos")
                        .HasForeignKey("PostInfoPostId");

                    b.HasOne("ayeonbbsbackend.Models.UserInfo", "ReplyUser")
                        .WithMany()
                        .HasForeignKey("ReplyUserUserId");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.SecondCategory", b =>
                {
                    b.HasOne("ayeonbbsbackend.Models.FirstCategory", "FirstCategory")
                        .WithMany("SecondCategories")
                        .HasForeignKey("FirstCategoryId");
                });

            modelBuilder.Entity("ayeonbbsbackend.Models.UserPublishCategory", b =>
                {
                    b.HasOne("ayeonbbsbackend.Models.SecondCategory", "SecondCategory")
                        .WithMany()
                        .HasForeignKey("SecondCategoryId");

                    b.HasOne("ayeonbbsbackend.Models.UserInfo", "UserInfo")
                        .WithMany("UserPublishCategories")
                        .HasForeignKey("UserInfoUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
